const redux = require("redux");
const createStore = redux.legacy_createStore;
const combineReducers = redux.combineReducers;
// action
const ADD_HERO = "ADD_HERO";
const REMOVE_HERO = "REMOVE_HERO";
const SET_HERO = "SET_HERO";

const ADD_MOVIE = "ADD_MOVIE";
const REMOVE_MOVIE = "REMOVE_MOVIE";

// action creator
let addHero = () => {
    return {
        type : ADD_HERO
    }
}
let removeHero = () => {
    return {
        type : REMOVE_HERO
    }
}
let setHero = (arg) => {
    return {
        type : SET_HERO,
        payload : arg
    }
}
let addMovie = () => {
    return {
        type : ADD_MOVIE
    }
}
let removeMovie = () => {
    return {
        type : REMOVE_MOVIE
    }
}
// initial value
const initialHeroValue = {
    numberOfHeroes : 0
}
const initialMovieValue = {
    numberOfMovies : 0
}

// reducer 
const heroReducer = (state = initialHeroValue, action) => {
    switch(action.type){
        case ADD_HERO : return {...state, numberOfHeroes : state.numberOfHeroes + 1 }
        case REMOVE_HERO : return {...state, numberOfHeroes : state.numberOfHeroes - 1 }
        case SET_HERO : return {...state, numberOfHeroes : action.payload }
        default : return state
    }
};
const movieReducer = (state = initialMovieValue, action) => {
    switch(action.type){
        case ADD_MOVIE : return {...state, numberOfMovies : state.numberOfMovies + 1 }
        case REMOVE_MOVIE : return {...state, numberOfMovies : state.numberOfMovies - 1 }
        default : return state
    }
};

const rootReducer = combineReducers({
    heroes : heroReducer,
    movies : movieReducer
})

const store = createStore(rootReducer);
// initial value
console.log("initial value ",store.getState());

store.subscribe(()=>{
    // modified value
    console.log("after subscription ",store.getState())
});

store.dispatch( addHero() );
store.dispatch( addHero() );
store.dispatch( addHero() );
store.dispatch( addHero() );
store.dispatch( removeHero() );
store.dispatch( addHero() );
store.dispatch( removeHero() );
store.dispatch( setHero(10) );
store.dispatch( removeHero() );
store.dispatch( addHero() );
store.dispatch( addMovie() );
store.dispatch( addMovie() );
store.dispatch( addMovie() );
store.dispatch( addMovie() );
store.dispatch( removeMovie() );
store.dispatch( addMovie() );
store.dispatch( removeMovie() );
store.dispatch( addMovie() );
store.dispatch( removeMovie() );
store.dispatch( addMovie() );
